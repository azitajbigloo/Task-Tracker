{"ast":null,"code":"var _jsxFileName = \"/Users/azitajb/react-task-tracker/src/components/Tasks.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Doctro Appt',\n    day: 'May 5th at 2:30pm',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'Meeting with Angela',\n    day: 'May 12th at 3:30pm',\n    reminder: true\n  }, {\n    id: 3,\n    text: 'Vet Appointment',\n    day: 'May 25th at 10:30am',\n    reminder: true\n  }, {\n    id: 4,\n    text: 'Grocery Shopping',\n    day: 'May 10th at 12:30pm',\n    reminder: false\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tasks.map(tasks => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", tasks.text, \" \"]\n    }, tasks.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 27\n    }, this))\n  }, void 0, false);\n};\n_s(Tasks, \"a1/5Tc0dcewRK7jpiUaKi6lsops=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Tasks","_s","tasks","setTasks","id","text","day","reminder","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/azitajb/react-task-tracker/src/components/Tasks.js"],"sourcesContent":["import {useState} from 'react'\n\nconst Tasks = () => {\n    const [tasks, setTasks] = useState(\n        [\n            {\n                id: 1,\n                text: 'Doctro Appt',\n                day: 'May 5th at 2:30pm',\n                reminder: true,\n            },\n            {\n                id: 2,\n                text: 'Meeting with Angela',\n                day: 'May 12th at 3:30pm',\n                reminder: true,\n            },\n            {\n                id: 3,\n                text: 'Vet Appointment',\n                day: 'May 25th at 10:30am',\n                reminder: true,\n            },\n            {\n                id: 4,\n                text: 'Grocery Shopping',\n                day: 'May 10th at 12:30pm',\n                reminder: false,\n            }\n        ]\n        \n    )\n  return (\n    <> \n    {tasks.map((tasks)=> (<h3 key={tasks.id} > {tasks.text} </h3>))}\n    </>\n  )\n}\n\nexport default Tasks\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAC9B,CACI;IACIS,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,aAAa;IACnBC,GAAG,EAAE,mBAAmB;IACxBC,QAAQ,EAAE;EACd,CAAC,EACD;IACIH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,qBAAqB;IAC3BC,GAAG,EAAE,oBAAoB;IACzBC,QAAQ,EAAE;EACd,CAAC,EACD;IACIH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,iBAAiB;IACvBC,GAAG,EAAE,qBAAqB;IAC1BC,QAAQ,EAAE;EACd,CAAC,EACD;IACIH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,kBAAkB;IACxBC,GAAG,EAAE,qBAAqB;IAC1BC,QAAQ,EAAE;EACd,CAAC,CAGT,CAAC;EACH,oBACEV,OAAA,CAAAE,SAAA;IAAAS,QAAA,EACCN,KAAK,CAACO,GAAG,CAAEP,KAAK,iBAAKL,OAAA;MAAAW,QAAA,GAAoB,GAAC,EAACN,KAAK,CAACG,IAAI,EAAC,GAAC;IAAA,GAAzBH,KAAK,CAACE,EAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqB,CAAE;EAAC,gBAC7D,CAAC;AAEP,CAAC;AAAAZ,EAAA,CAnCKD,KAAK;AAAAc,EAAA,GAALd,KAAK;AAqCX,eAAeA,KAAK;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}